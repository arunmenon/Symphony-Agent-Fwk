[build-system]
requires = ["setuptools>=61.0.0", "wheel>=0.37.0", "build>=0.10.0"]
build-backend = "setuptools.build_meta"

[project]
name = "symphony"
version = "0.1.0"
description = "Next-Generation Agentic Framework for LLM-based applications"
readme = "README.md"
authors = [
    {name = "Symphony Team"}
]
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = [
    "llm",
    "agents",
    "ai",
    "orchestration",
    "workflow",
    "memory",
    "knowledge-graph",
    "patterns",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "tiktoken>=0.4.0",
    "PyYAML>=6.0",
    "mcp>=0.1.0",  # Model Context Protocol (MCP) official SDK
    "litellm>=1.0.0",  # Unified interface for multiple LLM providers
    "typing-extensions>=4.0.0",  # Enhanced typing support
]

[project.optional-dependencies]
# Model providers
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.5.0"]
vertexai = ["google-cloud-aiplatform>=1.36.0"]
huggingface = ["huggingface-hub>=0.16.0"]

# Vector stores
qdrant = ["qdrant-client>=1.1.0"]
chroma = ["chromadb>=0.4.0"]
weaviate = ["weaviate-client>=3.15.0"]

# Knowledge graphs
neo4j = ["neo4j>=5.8.0"]
networkx = ["networkx>=3.0.0"]

# Observability
wandb = ["wandb>=0.15.0"]
mlflow = ["mlflow>=2.4.0"]
langsmith = ["langsmith>=0.0.15"]

# Visualization
visualization = ["matplotlib>=3.7.0", "networkx>=3.0.0", "plotly>=5.14.0"]

# CLI tools
cli = ["click>=8.1.0", "rich>=13.3.0", "mcp[cli]>=0.1.0"]

# Development
dev = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.3.0",
    "ruff>=0.0.262",
    "black>=23.3.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.1",
    "hypothesis>=6.75.0",  # Property-based testing
    "coverage>=7.2.5",
]

# Core feature sets
memory = ["qdrant-client>=1.1.0", "transformers>=4.28.0"]
kg = ["neo4j>=5.8.0", "networkx>=3.0.0"]
all = [
    "openai>=1.0.0",
    "anthropic>=0.5.0", 
    "qdrant-client>=1.1.0",
    "neo4j>=5.8.0",
    "wandb>=0.15.0",
    "matplotlib>=3.7.0",
    "networkx>=3.0.0",
    "click>=8.1.0",
    "rich>=13.3.0",
]

[project.urls]
Documentation = "https://github.com/yourusername/symphony/docs"
Source = "https://github.com/yourusername/symphony"
"Bug Tracker" = "https://github.com/yourusername/symphony/issues"

[project.scripts]
symphony = "symphony.cli:main"

[tool.ruff]
line-length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--cov=symphony --cov-report=term-missing"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Tests that might be slow",
    "memory: Tests related to memory components",
    "agents: Tests related to agent components",
    "kg: Tests related to knowledge graph components",
    "dag: Tests related to DAG workflows",
    "orchestration: Tests related to agent orchestration",
    "tools: Tests related to tools",
]